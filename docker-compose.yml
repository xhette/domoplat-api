version: "3.9"
    
services:
  # PostgreSQL
  postgres:
    image: postgres:16
    container_name: dev_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: app_db
    ports:
      - "5433:5432" # локально 5433 вместо стандартного 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devnet

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: dev_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8086:80" # стандартный 80 заменён на 8086
    depends_on:
      - postgres
    networks:
      - devnet

  # Zookeeper (для Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: dev_zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2182:2181" # на случай, если 2181 занят
    networks:
      - devnet

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: dev_kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9093:9092" # внешний порт 9093, внутренний 9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - devnet

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: dev_kafka_ui
    restart: unless-stopped
    ports:
      - "8089:8080" # 8089 вместо стандартного 8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - devnet

  # Redis
  redis:
    image: redis:7
    container_name: dev_redis
    restart: unless-stopped
    ports:
      - "6380:6379" # внешний порт 6380 вместо 6379
    volumes:
      - redis_data:/data
    networks:
      - devnet

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: dev_redis_commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8087:8081" # чтобы не пересекалось с pgAdmin и Kafka UI
    depends_on:
      - redis
    networks:
      - devnet

volumes:
  postgres_data:
  redis_data:

networks:
  devnet:
    driver: bridge
